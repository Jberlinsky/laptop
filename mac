#!/usr/bin/env bash
### end common-components/bash-shebang

# Welcome to the thoughtbot laptop script! Be prepared to turn your laptop (or
# desktop, no haters here) into an awesome development machine.

# This file is auto-generated. Do not edit it by hand unless you know what
# you're doing. Please see 'CONTRIBUTING.md' for more information.
### end common-components/header

trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e
### end common-components/exit-trap

if [[ ! -d "$HOME/.bin/" ]]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch $HOME/.zshrc
fi

if [[ ":$PATH:" != *":$HOME/.bin:"* ]]; then
  printf 'export PATH="$HOME/.bin:$PATH"\n' >> ~/.zshrc
  export PATH="$HOME/.bin:$PATH"
fi
### end common-components/check-home-bin

fancy_echo() {
  printf "\n%b\n" "$1"
}
### end common-components/shared-functions

fancy_echo "Changing your shell to zsh ..."
  chsh -s $(which zsh)
### end common-components/zsh

if [[ -f /etc/zshenv ]]; then
  fancy_echo "Fixing OSX zsh environment bug ..."
    sudo mv /etc/{zshenv,zshrc}
fi
### end mac-components/zsh-fix

if ! which brew &>/dev/null; then
  fancy_echo "Installing Homebrew, a good OS X package manager ..."
    ruby <(curl -fsS https://raw.github.com/Homebrew/homebrew/go/install)

  if ! grep -qs "recommended by brew doctor" ~/.zshrc; then
    fancy_echo "Put Homebrew location earlier in PATH ..."
      printf '\n# recommended by brew doctor\n' >> ~/.zshrc
      printf 'export PATH="/usr/local/bin:$PATH"\n' >> ~/.zshrc
      export PATH="/usr/local/bin:$PATH"
  fi
else
  fancy_echo "Homebrew already installed. Skipping ..."
fi

fancy_echo "Updating Homebrew formulas ..."
brew update
### end mac-components/homebrew

fancy_echo "Installing Postgres, a good open source relational database ..."
  brew install postgres --no-python

fancy_echo "Installing Redis, a good key-value database ..."
  brew install redis

fancy_echo "Installing The Silver Searcher (better than ack or grep) to search the contents of files ..."
  brew install the_silver_searcher

fancy_echo "Installing vim from Homebrew to get the latest version ..."
  brew install vim

fancy_echo "Installing ctags, to index files for vim tab completion of methods, classes, variables ..."
  brew install ctags

fancy_echo "Installing tmux, to save project state and switch between projects ..."
  brew install tmux

fancy_echo "Installing reattach-to-user-namespace, for copy-paste and RubyMotion compatibility with tmux ..."
  brew install reattach-to-user-namespace

fancy_echo "Installing ImageMagick, to crop and resize images ..."
  brew install imagemagick

fancy_echo "Installing QT, used by Capybara Webkit for headless Javascript integration testing ..."
  brew install qt

fancy_echo "Installing watch, to execute a program periodically and show the output ..."
  brew install watch
### end mac-components/packages

fancy_echo "Starting Postgres ..."
  brew services start postgres || brew services restart postgresql
### end mac-components/start-services

fancy_echo "Installing rvm, to change Ruby versions ..."
  \curl -sSL https://get.rvm.io | bash -s stable

source ~/.zshrc
### end common-components/rvm

fancy_echo "Installing GNU Compiler Collection, a necessary prerequisite to installing Ruby ..."
  brew tap homebrew/dupes
  brew install apple-gcc42

fancy_echo "Upgrading and linking OpenSSL ..."
  brew install openssl

export CC=gcc-4.2
### end mac-components/compiler-and-libraries

RUBY_VERSION="2.1.1"

printf "rvm_install_on_use_flag=1\n" >> ~/.rvmrc
printf "rvm_make_flags=\"--jobs=3\"\n" >> ~/.rvmrc

fancy_echo "Installing Ruby $RUBY_VERSION ..."
  rvm install $RUBY_VERSION
rvm alias create default $RUBY_VERSION
rvm use $RUBY_VERSION
### end common-components/ruby-environment

fancy_echo "Configuring Bundler for faster, parallel gem installation ..."
  number_of_cores=$(sysctl -n hw.ncpu)
  bundle config --global jobs $((number_of_cores - 1))
### end mac-components/bundler

fancy_echo "Installing Suspenders, thoughtbot's Rails template ..."
  gem install suspenders --no-document
### end common-components/default-gems

fancy_echo "Installing Heroku CLI client ..."
  brew install heroku-toolbelt

fancy_echo "Installing the heroku-config plugin to pull config variables locally to be used as ENV variables ..."
  heroku plugins:install git://github.com/ddollar/heroku-config.git
### end mac-components/heroku

fancy_echo "Installing GitHub CLI client ..."
  brew install hub
### end mac-components/github

fancy_echo "Installing rcm, to manage your dotfiles ..."
  brew tap thoughtbot/formulae
  brew install rcm
### end mac-components/rcm

